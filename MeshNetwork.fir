circuit MeshNetwork :
  module MeshNode :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}}}[4], flip requestPacket : { flip ready : UInt<1>, valid : UInt<1>, bits : { destNodeID : UInt<1>[2], payload : UInt<16>}}, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}}}[4], state : UInt<3>, routeLookup : { sourceNodeID : UInt<2>, destNodeID : UInt<1>[2], flip route : UInt[3]}}

    reg xCordReg : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 71:33]
    reg yCordReg : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 72:33]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 74:22]
    reg isReady : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[MeshNode.scala 75:24]
    reg nextHop : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 76:24]
    reg nextRoute : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 77:26]
    reg payload : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 78:24]
    io.in[0].ready <= isReady @[MeshNode.scala 85:15]
    io.in[1].ready <= isReady @[MeshNode.scala 85:15]
    io.in[2].ready <= isReady @[MeshNode.scala 85:15]
    io.in[3].ready <= isReady @[MeshNode.scala 85:15]
    io.out[0].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[0].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[0].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[0].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[1].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[2].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[3].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    node _T = asUInt(UInt<1>("h0")) @[MeshNode.scala 93:18]
    node _T_1 = asUInt(state) @[MeshNode.scala 93:18]
    node _T_2 = eq(_T, _T_1) @[MeshNode.scala 93:18]
    when _T_2 : @[MeshNode.scala 93:18]
      node _T_3 = and(io.requestPacket.ready, io.requestPacket.valid) @[Decoupled.scala 52:35]
      when _T_3 : @[MeshNode.scala 95:35]
        nextHop <= io.routeLookup.route[0] @[MeshNode.scala 98:17]
        wire _nextRoute_WIRE : UInt[2] @[MeshNode.scala 99:29]
        _nextRoute_WIRE[0] <= io.routeLookup.route[1] @[MeshNode.scala 99:29]
        _nextRoute_WIRE[1] <= io.routeLookup.route[2] @[MeshNode.scala 99:29]
        node _nextRoute_T = cat(_nextRoute_WIRE[1], _nextRoute_WIRE[0]) @[MeshNode.scala 99:42]
        nextRoute <= _nextRoute_T @[MeshNode.scala 99:19]
        payload <= io.requestPacket.bits.payload @[MeshNode.scala 100:17]
        isReady <= UInt<1>("h0") @[MeshNode.scala 101:17]
        state <= UInt<1>("h1") @[MeshNode.scala 102:15]
      else :
        node _T_4 = or(io.in[0].valid, io.in[1].valid) @[MeshNode.scala 103:56]
        node _T_5 = or(_T_4, io.in[2].valid) @[MeshNode.scala 103:56]
        node _T_6 = or(_T_5, io.in[3].valid) @[MeshNode.scala 103:56]
        when _T_6 : @[MeshNode.scala 103:63]
          node _index_T = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_1 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_2 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_3 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_4 = mux(_index_T_2, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 106:37]
          node _index_T_5 = mux(_index_T_1, UInt<1>("h1"), _index_T_4) @[MeshNode.scala 106:37]
          node index = mux(_index_T, UInt<1>("h0"), _index_T_5) @[MeshNode.scala 106:37]
          node _nextHop_T = bits(io.in[index].bits.word.1, 0, 0) @[MeshNode.scala 107:54]
          node _nextHop_T_1 = bits(io.in[index].bits.word.1, 1, 1) @[MeshNode.scala 107:54]
          node _nextHop_T_2 = bits(io.in[index].bits.word.1, 2, 2) @[MeshNode.scala 107:54]
          node _nextHop_T_3 = bits(io.in[index].bits.word.1, 3, 3) @[MeshNode.scala 107:54]
          node _nextHop_T_4 = bits(io.in[index].bits.word.1, 4, 4) @[MeshNode.scala 107:54]
          node _nextHop_T_5 = bits(io.in[index].bits.word.1, 5, 5) @[MeshNode.scala 107:54]
          node _nextHop_T_6 = bits(io.in[index].bits.word.1, 6, 6) @[MeshNode.scala 107:54]
          node _nextHop_T_7 = bits(io.in[index].bits.word.1, 7, 7) @[MeshNode.scala 107:54]
          node _nextHop_T_8 = bits(io.in[index].bits.word.1, 8, 8) @[MeshNode.scala 107:54]
          wire _nextHop_WIRE : UInt<1>[2] @[MeshNode.scala 107:27]
          _nextHop_WIRE[0] <= _nextHop_T @[MeshNode.scala 107:27]
          _nextHop_WIRE[1] <= _nextHop_T_1 @[MeshNode.scala 107:27]
          node _nextHop_T_9 = cat(_nextHop_WIRE[1], _nextHop_WIRE[0]) @[MeshNode.scala 107:93]
          nextHop <= _nextHop_T_9 @[MeshNode.scala 107:17]
          node _nextRoute_T_1 = bits(io.in[index].bits.word.1, 0, 0) @[MeshNode.scala 108:56]
          node _nextRoute_T_2 = bits(io.in[index].bits.word.1, 1, 1) @[MeshNode.scala 108:56]
          node _nextRoute_T_3 = bits(io.in[index].bits.word.1, 2, 2) @[MeshNode.scala 108:56]
          node _nextRoute_T_4 = bits(io.in[index].bits.word.1, 3, 3) @[MeshNode.scala 108:56]
          node _nextRoute_T_5 = bits(io.in[index].bits.word.1, 4, 4) @[MeshNode.scala 108:56]
          node _nextRoute_T_6 = bits(io.in[index].bits.word.1, 5, 5) @[MeshNode.scala 108:56]
          node _nextRoute_T_7 = bits(io.in[index].bits.word.1, 6, 6) @[MeshNode.scala 108:56]
          node _nextRoute_T_8 = bits(io.in[index].bits.word.1, 7, 7) @[MeshNode.scala 108:56]
          node _nextRoute_T_9 = bits(io.in[index].bits.word.1, 8, 8) @[MeshNode.scala 108:56]
          wire _nextRoute_WIRE_1 : UInt<1>[5] @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[0] <= _nextRoute_T_4 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[1] <= _nextRoute_T_5 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[2] <= _nextRoute_T_6 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[3] <= _nextRoute_T_7 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[4] <= _nextRoute_T_8 @[MeshNode.scala 108:29]
          node nextRoute_lo = cat(_nextRoute_WIRE_1[1], _nextRoute_WIRE_1[0]) @[MeshNode.scala 108:110]
          node nextRoute_hi_hi = cat(_nextRoute_WIRE_1[4], _nextRoute_WIRE_1[3]) @[MeshNode.scala 108:110]
          node nextRoute_hi = cat(nextRoute_hi_hi, _nextRoute_WIRE_1[2]) @[MeshNode.scala 108:110]
          node _nextRoute_T_10 = cat(nextRoute_hi, nextRoute_lo) @[MeshNode.scala 108:110]
          nextRoute <= _nextRoute_T_10 @[MeshNode.scala 108:19]
          state <= UInt<3>("h5") @[MeshNode.scala 110:15]
    else :
      node _T_7 = asUInt(UInt<1>("h1")) @[MeshNode.scala 93:18]
      node _T_8 = asUInt(state) @[MeshNode.scala 93:18]
      node _T_9 = eq(_T_7, _T_8) @[MeshNode.scala 93:18]
      when _T_9 : @[MeshNode.scala 93:18]
        wire header : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 148:22]
        node _header_header_word_0_T = asUInt(UInt<1>("h0")) @[MeshNode.scala 149:25]
        header.word.0 <= _header_header_word_0_T @[MeshNode.scala 149:20]
        header.word.1 <= nextRoute @[MeshNode.scala 150:20]
        header.word.2 <= UInt<1>("h0") @[MeshNode.scala 151:20]
        node _T_10 = or(nextHop, UInt<2>("h0"))
        node _T_11 = bits(_T_10, 1, 0)
        io.out[_T_11].valid <= UInt<1>("h1") @[MeshNode.scala 115:29]
        node _T_12 = or(nextHop, UInt<2>("h0"))
        node _T_13 = bits(_T_12, 1, 0)
        io.out[_T_13].bits <= header @[MeshNode.scala 116:28]
        state <= UInt<2>("h2") @[MeshNode.scala 117:13]
      else :
        node _T_14 = asUInt(UInt<2>("h2")) @[MeshNode.scala 93:18]
        node _T_15 = asUInt(state) @[MeshNode.scala 93:18]
        node _T_16 = eq(_T_14, _T_15) @[MeshNode.scala 93:18]
        when _T_16 : @[MeshNode.scala 93:18]
          wire payloadPhit : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 156:23]
          node _payloadPhit_payload_word_0_T = asUInt(UInt<1>("h1")) @[MeshNode.scala 157:26]
          payloadPhit.word.0 <= _payloadPhit_payload_word_0_T @[MeshNode.scala 157:21]
          payloadPhit.word.1 <= UInt<1>("h0") @[MeshNode.scala 158:21]
          payloadPhit.word.2 <= payload @[MeshNode.scala 159:21]
          node _T_17 = or(nextHop, UInt<2>("h0"))
          node _T_18 = bits(_T_17, 1, 0)
          io.out[_T_18].valid <= UInt<1>("h1") @[MeshNode.scala 122:29]
          node _T_19 = or(nextHop, UInt<2>("h0"))
          node _T_20 = bits(_T_19, 1, 0)
          io.out[_T_20].bits <= payloadPhit @[MeshNode.scala 123:28]
          state <= UInt<2>("h3") @[MeshNode.scala 124:13]
        else :
          node _T_21 = asUInt(UInt<2>("h3")) @[MeshNode.scala 93:18]
          node _T_22 = asUInt(state) @[MeshNode.scala 93:18]
          node _T_23 = eq(_T_21, _T_22) @[MeshNode.scala 93:18]
          when _T_23 : @[MeshNode.scala 93:18]
            wire endingPhit : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 164:19]
            node _endingPhit_end_word_0_T = asUInt(UInt<2>("h2")) @[MeshNode.scala 165:23]
            endingPhit.word.0 <= _endingPhit_end_word_0_T @[MeshNode.scala 165:17]
            endingPhit.word.1 <= UInt<1>("h0") @[MeshNode.scala 166:17]
            endingPhit.word.2 <= UInt<1>("h0") @[MeshNode.scala 167:17]
            node _T_24 = or(nextHop, UInt<2>("h0"))
            node _T_25 = bits(_T_24, 1, 0)
            io.out[_T_25].valid <= UInt<1>("h1") @[MeshNode.scala 129:29]
            node _T_26 = or(nextHop, UInt<2>("h0"))
            node _T_27 = bits(_T_26, 1, 0)
            io.out[_T_27].bits <= endingPhit @[MeshNode.scala 130:28]
            state <= UInt<1>("h0") @[MeshNode.scala 131:13]
            isReady <= UInt<1>("h1") @[MeshNode.scala 132:15]
          else :
            node _T_28 = asUInt(UInt<3>("h5")) @[MeshNode.scala 93:18]
            node _T_29 = asUInt(state) @[MeshNode.scala 93:18]
            node _T_30 = eq(_T_28, _T_29) @[MeshNode.scala 93:18]
            when _T_30 : @[MeshNode.scala 93:18]
              node _index_T_6 = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_7 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_8 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_9 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_10 = mux(_index_T_8, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 136:35]
              node _index_T_11 = mux(_index_T_7, UInt<1>("h1"), _index_T_10) @[MeshNode.scala 136:35]
              node index_1 = mux(_index_T_6, UInt<1>("h0"), _index_T_11) @[MeshNode.scala 136:35]
              payload <= io.in[index_1].bits.word.2 @[MeshNode.scala 137:15]
              state <= UInt<3>("h6") @[MeshNode.scala 138:13]
            else :
              node _T_31 = asUInt(UInt<3>("h6")) @[MeshNode.scala 93:18]
              node _T_32 = asUInt(state) @[MeshNode.scala 93:18]
              node _T_33 = eq(_T_31, _T_32) @[MeshNode.scala 93:18]
              when _T_33 : @[MeshNode.scala 93:18]
                node _index_T_12 = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_13 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_14 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_15 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_16 = mux(_index_T_14, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 141:35]
                node _index_T_17 = mux(_index_T_13, UInt<1>("h1"), _index_T_16) @[MeshNode.scala 141:35]
                node index_2 = mux(_index_T_12, UInt<1>("h0"), _index_T_17) @[MeshNode.scala 141:35]
                node _state_T = asUInt(UInt<3>("h4")) @[MeshNode.scala 143:34]
                node _state_T_1 = eq(nextHop, _state_T) @[MeshNode.scala 143:28]
                node _state_T_2 = mux(_state_T_1, UInt<1>("h0"), UInt<1>("h1")) @[MeshNode.scala 143:19]
                state <= _state_T_2 @[MeshNode.scala 143:13]
    io.routeLookup.sourceNodeID <= UInt<1>("h0") @[MeshNode.scala 181:31]
    io.routeLookup.destNodeID[0] <= io.requestPacket.bits.destNodeID[0] @[MeshNode.scala 186:32]
    io.routeLookup.destNodeID[1] <= io.requestPacket.bits.destNodeID[1] @[MeshNode.scala 187:32]
    io.requestPacket.ready <= isReady @[MeshNode.scala 189:26]
    io.state <= state @[MeshNode.scala 190:12]

  module MeshNode_1 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}}}[4], flip requestPacket : { flip ready : UInt<1>, valid : UInt<1>, bits : { destNodeID : UInt<1>[2], payload : UInt<16>}}, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}}}[4], state : UInt<3>, routeLookup : { sourceNodeID : UInt<2>, destNodeID : UInt<1>[2], flip route : UInt[3]}}

    reg xCordReg : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[MeshNode.scala 71:33]
    reg yCordReg : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 72:33]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 74:22]
    reg isReady : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[MeshNode.scala 75:24]
    reg nextHop : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 76:24]
    reg nextRoute : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 77:26]
    reg payload : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 78:24]
    io.in[0].ready <= isReady @[MeshNode.scala 85:15]
    io.in[1].ready <= isReady @[MeshNode.scala 85:15]
    io.in[2].ready <= isReady @[MeshNode.scala 85:15]
    io.in[3].ready <= isReady @[MeshNode.scala 85:15]
    io.out[0].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[0].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[0].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[0].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[1].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[2].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[3].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    node _T = asUInt(UInt<1>("h0")) @[MeshNode.scala 93:18]
    node _T_1 = asUInt(state) @[MeshNode.scala 93:18]
    node _T_2 = eq(_T, _T_1) @[MeshNode.scala 93:18]
    when _T_2 : @[MeshNode.scala 93:18]
      node _T_3 = and(io.requestPacket.ready, io.requestPacket.valid) @[Decoupled.scala 52:35]
      when _T_3 : @[MeshNode.scala 95:35]
        nextHop <= io.routeLookup.route[0] @[MeshNode.scala 98:17]
        wire _nextRoute_WIRE : UInt[2] @[MeshNode.scala 99:29]
        _nextRoute_WIRE[0] <= io.routeLookup.route[1] @[MeshNode.scala 99:29]
        _nextRoute_WIRE[1] <= io.routeLookup.route[2] @[MeshNode.scala 99:29]
        node _nextRoute_T = cat(_nextRoute_WIRE[1], _nextRoute_WIRE[0]) @[MeshNode.scala 99:42]
        nextRoute <= _nextRoute_T @[MeshNode.scala 99:19]
        payload <= io.requestPacket.bits.payload @[MeshNode.scala 100:17]
        isReady <= UInt<1>("h0") @[MeshNode.scala 101:17]
        state <= UInt<1>("h1") @[MeshNode.scala 102:15]
      else :
        node _T_4 = or(io.in[0].valid, io.in[1].valid) @[MeshNode.scala 103:56]
        node _T_5 = or(_T_4, io.in[2].valid) @[MeshNode.scala 103:56]
        node _T_6 = or(_T_5, io.in[3].valid) @[MeshNode.scala 103:56]
        when _T_6 : @[MeshNode.scala 103:63]
          node _index_T = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_1 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_2 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_3 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_4 = mux(_index_T_2, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 106:37]
          node _index_T_5 = mux(_index_T_1, UInt<1>("h1"), _index_T_4) @[MeshNode.scala 106:37]
          node index = mux(_index_T, UInt<1>("h0"), _index_T_5) @[MeshNode.scala 106:37]
          node _nextHop_T = bits(io.in[index].bits.word.1, 0, 0) @[MeshNode.scala 107:54]
          node _nextHop_T_1 = bits(io.in[index].bits.word.1, 1, 1) @[MeshNode.scala 107:54]
          node _nextHop_T_2 = bits(io.in[index].bits.word.1, 2, 2) @[MeshNode.scala 107:54]
          node _nextHop_T_3 = bits(io.in[index].bits.word.1, 3, 3) @[MeshNode.scala 107:54]
          node _nextHop_T_4 = bits(io.in[index].bits.word.1, 4, 4) @[MeshNode.scala 107:54]
          node _nextHop_T_5 = bits(io.in[index].bits.word.1, 5, 5) @[MeshNode.scala 107:54]
          node _nextHop_T_6 = bits(io.in[index].bits.word.1, 6, 6) @[MeshNode.scala 107:54]
          node _nextHop_T_7 = bits(io.in[index].bits.word.1, 7, 7) @[MeshNode.scala 107:54]
          node _nextHop_T_8 = bits(io.in[index].bits.word.1, 8, 8) @[MeshNode.scala 107:54]
          wire _nextHop_WIRE : UInt<1>[2] @[MeshNode.scala 107:27]
          _nextHop_WIRE[0] <= _nextHop_T @[MeshNode.scala 107:27]
          _nextHop_WIRE[1] <= _nextHop_T_1 @[MeshNode.scala 107:27]
          node _nextHop_T_9 = cat(_nextHop_WIRE[1], _nextHop_WIRE[0]) @[MeshNode.scala 107:93]
          nextHop <= _nextHop_T_9 @[MeshNode.scala 107:17]
          node _nextRoute_T_1 = bits(io.in[index].bits.word.1, 0, 0) @[MeshNode.scala 108:56]
          node _nextRoute_T_2 = bits(io.in[index].bits.word.1, 1, 1) @[MeshNode.scala 108:56]
          node _nextRoute_T_3 = bits(io.in[index].bits.word.1, 2, 2) @[MeshNode.scala 108:56]
          node _nextRoute_T_4 = bits(io.in[index].bits.word.1, 3, 3) @[MeshNode.scala 108:56]
          node _nextRoute_T_5 = bits(io.in[index].bits.word.1, 4, 4) @[MeshNode.scala 108:56]
          node _nextRoute_T_6 = bits(io.in[index].bits.word.1, 5, 5) @[MeshNode.scala 108:56]
          node _nextRoute_T_7 = bits(io.in[index].bits.word.1, 6, 6) @[MeshNode.scala 108:56]
          node _nextRoute_T_8 = bits(io.in[index].bits.word.1, 7, 7) @[MeshNode.scala 108:56]
          node _nextRoute_T_9 = bits(io.in[index].bits.word.1, 8, 8) @[MeshNode.scala 108:56]
          wire _nextRoute_WIRE_1 : UInt<1>[5] @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[0] <= _nextRoute_T_4 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[1] <= _nextRoute_T_5 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[2] <= _nextRoute_T_6 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[3] <= _nextRoute_T_7 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[4] <= _nextRoute_T_8 @[MeshNode.scala 108:29]
          node nextRoute_lo = cat(_nextRoute_WIRE_1[1], _nextRoute_WIRE_1[0]) @[MeshNode.scala 108:110]
          node nextRoute_hi_hi = cat(_nextRoute_WIRE_1[4], _nextRoute_WIRE_1[3]) @[MeshNode.scala 108:110]
          node nextRoute_hi = cat(nextRoute_hi_hi, _nextRoute_WIRE_1[2]) @[MeshNode.scala 108:110]
          node _nextRoute_T_10 = cat(nextRoute_hi, nextRoute_lo) @[MeshNode.scala 108:110]
          nextRoute <= _nextRoute_T_10 @[MeshNode.scala 108:19]
          state <= UInt<3>("h5") @[MeshNode.scala 110:15]
    else :
      node _T_7 = asUInt(UInt<1>("h1")) @[MeshNode.scala 93:18]
      node _T_8 = asUInt(state) @[MeshNode.scala 93:18]
      node _T_9 = eq(_T_7, _T_8) @[MeshNode.scala 93:18]
      when _T_9 : @[MeshNode.scala 93:18]
        wire header : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 148:22]
        node _header_header_word_0_T = asUInt(UInt<1>("h0")) @[MeshNode.scala 149:25]
        header.word.0 <= _header_header_word_0_T @[MeshNode.scala 149:20]
        header.word.1 <= nextRoute @[MeshNode.scala 150:20]
        header.word.2 <= UInt<1>("h0") @[MeshNode.scala 151:20]
        node _T_10 = or(nextHop, UInt<2>("h0"))
        node _T_11 = bits(_T_10, 1, 0)
        io.out[_T_11].valid <= UInt<1>("h1") @[MeshNode.scala 115:29]
        node _T_12 = or(nextHop, UInt<2>("h0"))
        node _T_13 = bits(_T_12, 1, 0)
        io.out[_T_13].bits <= header @[MeshNode.scala 116:28]
        state <= UInt<2>("h2") @[MeshNode.scala 117:13]
      else :
        node _T_14 = asUInt(UInt<2>("h2")) @[MeshNode.scala 93:18]
        node _T_15 = asUInt(state) @[MeshNode.scala 93:18]
        node _T_16 = eq(_T_14, _T_15) @[MeshNode.scala 93:18]
        when _T_16 : @[MeshNode.scala 93:18]
          wire payloadPhit : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 156:23]
          node _payloadPhit_payload_word_0_T = asUInt(UInt<1>("h1")) @[MeshNode.scala 157:26]
          payloadPhit.word.0 <= _payloadPhit_payload_word_0_T @[MeshNode.scala 157:21]
          payloadPhit.word.1 <= UInt<1>("h0") @[MeshNode.scala 158:21]
          payloadPhit.word.2 <= payload @[MeshNode.scala 159:21]
          node _T_17 = or(nextHop, UInt<2>("h0"))
          node _T_18 = bits(_T_17, 1, 0)
          io.out[_T_18].valid <= UInt<1>("h1") @[MeshNode.scala 122:29]
          node _T_19 = or(nextHop, UInt<2>("h0"))
          node _T_20 = bits(_T_19, 1, 0)
          io.out[_T_20].bits <= payloadPhit @[MeshNode.scala 123:28]
          state <= UInt<2>("h3") @[MeshNode.scala 124:13]
        else :
          node _T_21 = asUInt(UInt<2>("h3")) @[MeshNode.scala 93:18]
          node _T_22 = asUInt(state) @[MeshNode.scala 93:18]
          node _T_23 = eq(_T_21, _T_22) @[MeshNode.scala 93:18]
          when _T_23 : @[MeshNode.scala 93:18]
            wire endingPhit : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 164:19]
            node _endingPhit_end_word_0_T = asUInt(UInt<2>("h2")) @[MeshNode.scala 165:23]
            endingPhit.word.0 <= _endingPhit_end_word_0_T @[MeshNode.scala 165:17]
            endingPhit.word.1 <= UInt<1>("h0") @[MeshNode.scala 166:17]
            endingPhit.word.2 <= UInt<1>("h0") @[MeshNode.scala 167:17]
            node _T_24 = or(nextHop, UInt<2>("h0"))
            node _T_25 = bits(_T_24, 1, 0)
            io.out[_T_25].valid <= UInt<1>("h1") @[MeshNode.scala 129:29]
            node _T_26 = or(nextHop, UInt<2>("h0"))
            node _T_27 = bits(_T_26, 1, 0)
            io.out[_T_27].bits <= endingPhit @[MeshNode.scala 130:28]
            state <= UInt<1>("h0") @[MeshNode.scala 131:13]
            isReady <= UInt<1>("h1") @[MeshNode.scala 132:15]
          else :
            node _T_28 = asUInt(UInt<3>("h5")) @[MeshNode.scala 93:18]
            node _T_29 = asUInt(state) @[MeshNode.scala 93:18]
            node _T_30 = eq(_T_28, _T_29) @[MeshNode.scala 93:18]
            when _T_30 : @[MeshNode.scala 93:18]
              node _index_T_6 = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_7 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_8 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_9 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_10 = mux(_index_T_8, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 136:35]
              node _index_T_11 = mux(_index_T_7, UInt<1>("h1"), _index_T_10) @[MeshNode.scala 136:35]
              node index_1 = mux(_index_T_6, UInt<1>("h0"), _index_T_11) @[MeshNode.scala 136:35]
              payload <= io.in[index_1].bits.word.2 @[MeshNode.scala 137:15]
              state <= UInt<3>("h6") @[MeshNode.scala 138:13]
            else :
              node _T_31 = asUInt(UInt<3>("h6")) @[MeshNode.scala 93:18]
              node _T_32 = asUInt(state) @[MeshNode.scala 93:18]
              node _T_33 = eq(_T_31, _T_32) @[MeshNode.scala 93:18]
              when _T_33 : @[MeshNode.scala 93:18]
                node _index_T_12 = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_13 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_14 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_15 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_16 = mux(_index_T_14, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 141:35]
                node _index_T_17 = mux(_index_T_13, UInt<1>("h1"), _index_T_16) @[MeshNode.scala 141:35]
                node index_2 = mux(_index_T_12, UInt<1>("h0"), _index_T_17) @[MeshNode.scala 141:35]
                node _state_T = asUInt(UInt<3>("h4")) @[MeshNode.scala 143:34]
                node _state_T_1 = eq(nextHop, _state_T) @[MeshNode.scala 143:28]
                node _state_T_2 = mux(_state_T_1, UInt<1>("h0"), UInt<1>("h1")) @[MeshNode.scala 143:19]
                state <= _state_T_2 @[MeshNode.scala 143:13]
    io.routeLookup.sourceNodeID <= UInt<1>("h1") @[MeshNode.scala 181:31]
    io.routeLookup.destNodeID[0] <= io.requestPacket.bits.destNodeID[0] @[MeshNode.scala 186:32]
    io.routeLookup.destNodeID[1] <= io.requestPacket.bits.destNodeID[1] @[MeshNode.scala 187:32]
    io.requestPacket.ready <= isReady @[MeshNode.scala 189:26]
    io.state <= state @[MeshNode.scala 190:12]

  module MeshNode_2 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}}}[4], flip requestPacket : { flip ready : UInt<1>, valid : UInt<1>, bits : { destNodeID : UInt<1>[2], payload : UInt<16>}}, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}}}[4], state : UInt<3>, routeLookup : { sourceNodeID : UInt<2>, destNodeID : UInt<1>[2], flip route : UInt[3]}}

    reg xCordReg : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 71:33]
    reg yCordReg : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[MeshNode.scala 72:33]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 74:22]
    reg isReady : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[MeshNode.scala 75:24]
    reg nextHop : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 76:24]
    reg nextRoute : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 77:26]
    reg payload : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 78:24]
    io.in[0].ready <= isReady @[MeshNode.scala 85:15]
    io.in[1].ready <= isReady @[MeshNode.scala 85:15]
    io.in[2].ready <= isReady @[MeshNode.scala 85:15]
    io.in[3].ready <= isReady @[MeshNode.scala 85:15]
    io.out[0].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[0].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[0].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[0].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[1].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[2].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[3].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    node _T = asUInt(UInt<1>("h0")) @[MeshNode.scala 93:18]
    node _T_1 = asUInt(state) @[MeshNode.scala 93:18]
    node _T_2 = eq(_T, _T_1) @[MeshNode.scala 93:18]
    when _T_2 : @[MeshNode.scala 93:18]
      node _T_3 = and(io.requestPacket.ready, io.requestPacket.valid) @[Decoupled.scala 52:35]
      when _T_3 : @[MeshNode.scala 95:35]
        nextHop <= io.routeLookup.route[0] @[MeshNode.scala 98:17]
        wire _nextRoute_WIRE : UInt[2] @[MeshNode.scala 99:29]
        _nextRoute_WIRE[0] <= io.routeLookup.route[1] @[MeshNode.scala 99:29]
        _nextRoute_WIRE[1] <= io.routeLookup.route[2] @[MeshNode.scala 99:29]
        node _nextRoute_T = cat(_nextRoute_WIRE[1], _nextRoute_WIRE[0]) @[MeshNode.scala 99:42]
        nextRoute <= _nextRoute_T @[MeshNode.scala 99:19]
        payload <= io.requestPacket.bits.payload @[MeshNode.scala 100:17]
        isReady <= UInt<1>("h0") @[MeshNode.scala 101:17]
        state <= UInt<1>("h1") @[MeshNode.scala 102:15]
      else :
        node _T_4 = or(io.in[0].valid, io.in[1].valid) @[MeshNode.scala 103:56]
        node _T_5 = or(_T_4, io.in[2].valid) @[MeshNode.scala 103:56]
        node _T_6 = or(_T_5, io.in[3].valid) @[MeshNode.scala 103:56]
        when _T_6 : @[MeshNode.scala 103:63]
          node _index_T = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_1 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_2 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_3 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_4 = mux(_index_T_2, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 106:37]
          node _index_T_5 = mux(_index_T_1, UInt<1>("h1"), _index_T_4) @[MeshNode.scala 106:37]
          node index = mux(_index_T, UInt<1>("h0"), _index_T_5) @[MeshNode.scala 106:37]
          node _nextHop_T = bits(io.in[index].bits.word.1, 0, 0) @[MeshNode.scala 107:54]
          node _nextHop_T_1 = bits(io.in[index].bits.word.1, 1, 1) @[MeshNode.scala 107:54]
          node _nextHop_T_2 = bits(io.in[index].bits.word.1, 2, 2) @[MeshNode.scala 107:54]
          node _nextHop_T_3 = bits(io.in[index].bits.word.1, 3, 3) @[MeshNode.scala 107:54]
          node _nextHop_T_4 = bits(io.in[index].bits.word.1, 4, 4) @[MeshNode.scala 107:54]
          node _nextHop_T_5 = bits(io.in[index].bits.word.1, 5, 5) @[MeshNode.scala 107:54]
          node _nextHop_T_6 = bits(io.in[index].bits.word.1, 6, 6) @[MeshNode.scala 107:54]
          node _nextHop_T_7 = bits(io.in[index].bits.word.1, 7, 7) @[MeshNode.scala 107:54]
          node _nextHop_T_8 = bits(io.in[index].bits.word.1, 8, 8) @[MeshNode.scala 107:54]
          wire _nextHop_WIRE : UInt<1>[2] @[MeshNode.scala 107:27]
          _nextHop_WIRE[0] <= _nextHop_T @[MeshNode.scala 107:27]
          _nextHop_WIRE[1] <= _nextHop_T_1 @[MeshNode.scala 107:27]
          node _nextHop_T_9 = cat(_nextHop_WIRE[1], _nextHop_WIRE[0]) @[MeshNode.scala 107:93]
          nextHop <= _nextHop_T_9 @[MeshNode.scala 107:17]
          node _nextRoute_T_1 = bits(io.in[index].bits.word.1, 0, 0) @[MeshNode.scala 108:56]
          node _nextRoute_T_2 = bits(io.in[index].bits.word.1, 1, 1) @[MeshNode.scala 108:56]
          node _nextRoute_T_3 = bits(io.in[index].bits.word.1, 2, 2) @[MeshNode.scala 108:56]
          node _nextRoute_T_4 = bits(io.in[index].bits.word.1, 3, 3) @[MeshNode.scala 108:56]
          node _nextRoute_T_5 = bits(io.in[index].bits.word.1, 4, 4) @[MeshNode.scala 108:56]
          node _nextRoute_T_6 = bits(io.in[index].bits.word.1, 5, 5) @[MeshNode.scala 108:56]
          node _nextRoute_T_7 = bits(io.in[index].bits.word.1, 6, 6) @[MeshNode.scala 108:56]
          node _nextRoute_T_8 = bits(io.in[index].bits.word.1, 7, 7) @[MeshNode.scala 108:56]
          node _nextRoute_T_9 = bits(io.in[index].bits.word.1, 8, 8) @[MeshNode.scala 108:56]
          wire _nextRoute_WIRE_1 : UInt<1>[5] @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[0] <= _nextRoute_T_4 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[1] <= _nextRoute_T_5 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[2] <= _nextRoute_T_6 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[3] <= _nextRoute_T_7 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[4] <= _nextRoute_T_8 @[MeshNode.scala 108:29]
          node nextRoute_lo = cat(_nextRoute_WIRE_1[1], _nextRoute_WIRE_1[0]) @[MeshNode.scala 108:110]
          node nextRoute_hi_hi = cat(_nextRoute_WIRE_1[4], _nextRoute_WIRE_1[3]) @[MeshNode.scala 108:110]
          node nextRoute_hi = cat(nextRoute_hi_hi, _nextRoute_WIRE_1[2]) @[MeshNode.scala 108:110]
          node _nextRoute_T_10 = cat(nextRoute_hi, nextRoute_lo) @[MeshNode.scala 108:110]
          nextRoute <= _nextRoute_T_10 @[MeshNode.scala 108:19]
          state <= UInt<3>("h5") @[MeshNode.scala 110:15]
    else :
      node _T_7 = asUInt(UInt<1>("h1")) @[MeshNode.scala 93:18]
      node _T_8 = asUInt(state) @[MeshNode.scala 93:18]
      node _T_9 = eq(_T_7, _T_8) @[MeshNode.scala 93:18]
      when _T_9 : @[MeshNode.scala 93:18]
        wire header : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 148:22]
        node _header_header_word_0_T = asUInt(UInt<1>("h0")) @[MeshNode.scala 149:25]
        header.word.0 <= _header_header_word_0_T @[MeshNode.scala 149:20]
        header.word.1 <= nextRoute @[MeshNode.scala 150:20]
        header.word.2 <= UInt<1>("h0") @[MeshNode.scala 151:20]
        node _T_10 = or(nextHop, UInt<2>("h0"))
        node _T_11 = bits(_T_10, 1, 0)
        io.out[_T_11].valid <= UInt<1>("h1") @[MeshNode.scala 115:29]
        node _T_12 = or(nextHop, UInt<2>("h0"))
        node _T_13 = bits(_T_12, 1, 0)
        io.out[_T_13].bits <= header @[MeshNode.scala 116:28]
        state <= UInt<2>("h2") @[MeshNode.scala 117:13]
      else :
        node _T_14 = asUInt(UInt<2>("h2")) @[MeshNode.scala 93:18]
        node _T_15 = asUInt(state) @[MeshNode.scala 93:18]
        node _T_16 = eq(_T_14, _T_15) @[MeshNode.scala 93:18]
        when _T_16 : @[MeshNode.scala 93:18]
          wire payloadPhit : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 156:23]
          node _payloadPhit_payload_word_0_T = asUInt(UInt<1>("h1")) @[MeshNode.scala 157:26]
          payloadPhit.word.0 <= _payloadPhit_payload_word_0_T @[MeshNode.scala 157:21]
          payloadPhit.word.1 <= UInt<1>("h0") @[MeshNode.scala 158:21]
          payloadPhit.word.2 <= payload @[MeshNode.scala 159:21]
          node _T_17 = or(nextHop, UInt<2>("h0"))
          node _T_18 = bits(_T_17, 1, 0)
          io.out[_T_18].valid <= UInt<1>("h1") @[MeshNode.scala 122:29]
          node _T_19 = or(nextHop, UInt<2>("h0"))
          node _T_20 = bits(_T_19, 1, 0)
          io.out[_T_20].bits <= payloadPhit @[MeshNode.scala 123:28]
          state <= UInt<2>("h3") @[MeshNode.scala 124:13]
        else :
          node _T_21 = asUInt(UInt<2>("h3")) @[MeshNode.scala 93:18]
          node _T_22 = asUInt(state) @[MeshNode.scala 93:18]
          node _T_23 = eq(_T_21, _T_22) @[MeshNode.scala 93:18]
          when _T_23 : @[MeshNode.scala 93:18]
            wire endingPhit : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 164:19]
            node _endingPhit_end_word_0_T = asUInt(UInt<2>("h2")) @[MeshNode.scala 165:23]
            endingPhit.word.0 <= _endingPhit_end_word_0_T @[MeshNode.scala 165:17]
            endingPhit.word.1 <= UInt<1>("h0") @[MeshNode.scala 166:17]
            endingPhit.word.2 <= UInt<1>("h0") @[MeshNode.scala 167:17]
            node _T_24 = or(nextHop, UInt<2>("h0"))
            node _T_25 = bits(_T_24, 1, 0)
            io.out[_T_25].valid <= UInt<1>("h1") @[MeshNode.scala 129:29]
            node _T_26 = or(nextHop, UInt<2>("h0"))
            node _T_27 = bits(_T_26, 1, 0)
            io.out[_T_27].bits <= endingPhit @[MeshNode.scala 130:28]
            state <= UInt<1>("h0") @[MeshNode.scala 131:13]
            isReady <= UInt<1>("h1") @[MeshNode.scala 132:15]
          else :
            node _T_28 = asUInt(UInt<3>("h5")) @[MeshNode.scala 93:18]
            node _T_29 = asUInt(state) @[MeshNode.scala 93:18]
            node _T_30 = eq(_T_28, _T_29) @[MeshNode.scala 93:18]
            when _T_30 : @[MeshNode.scala 93:18]
              node _index_T_6 = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_7 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_8 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_9 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_10 = mux(_index_T_8, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 136:35]
              node _index_T_11 = mux(_index_T_7, UInt<1>("h1"), _index_T_10) @[MeshNode.scala 136:35]
              node index_1 = mux(_index_T_6, UInt<1>("h0"), _index_T_11) @[MeshNode.scala 136:35]
              payload <= io.in[index_1].bits.word.2 @[MeshNode.scala 137:15]
              state <= UInt<3>("h6") @[MeshNode.scala 138:13]
            else :
              node _T_31 = asUInt(UInt<3>("h6")) @[MeshNode.scala 93:18]
              node _T_32 = asUInt(state) @[MeshNode.scala 93:18]
              node _T_33 = eq(_T_31, _T_32) @[MeshNode.scala 93:18]
              when _T_33 : @[MeshNode.scala 93:18]
                node _index_T_12 = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_13 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_14 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_15 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_16 = mux(_index_T_14, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 141:35]
                node _index_T_17 = mux(_index_T_13, UInt<1>("h1"), _index_T_16) @[MeshNode.scala 141:35]
                node index_2 = mux(_index_T_12, UInt<1>("h0"), _index_T_17) @[MeshNode.scala 141:35]
                node _state_T = asUInt(UInt<3>("h4")) @[MeshNode.scala 143:34]
                node _state_T_1 = eq(nextHop, _state_T) @[MeshNode.scala 143:28]
                node _state_T_2 = mux(_state_T_1, UInt<1>("h0"), UInt<1>("h1")) @[MeshNode.scala 143:19]
                state <= _state_T_2 @[MeshNode.scala 143:13]
    io.routeLookup.sourceNodeID <= UInt<2>("h2") @[MeshNode.scala 181:31]
    io.routeLookup.destNodeID[0] <= io.requestPacket.bits.destNodeID[0] @[MeshNode.scala 186:32]
    io.routeLookup.destNodeID[1] <= io.requestPacket.bits.destNodeID[1] @[MeshNode.scala 187:32]
    io.requestPacket.ready <= isReady @[MeshNode.scala 189:26]
    io.state <= state @[MeshNode.scala 190:12]

  module MeshNode_3 :
    input clock : Clock
    input reset : Reset
    output io : { flip in : { flip ready : UInt<1>, valid : UInt<1>, bits : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}}}[4], flip requestPacket : { flip ready : UInt<1>, valid : UInt<1>, bits : { destNodeID : UInt<1>[2], payload : UInt<16>}}, out : { flip ready : UInt<1>, valid : UInt<1>, bits : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}}}[4], state : UInt<3>, routeLookup : { sourceNodeID : UInt<2>, destNodeID : UInt<1>[2], flip route : UInt[3]}}

    reg xCordReg : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[MeshNode.scala 71:33]
    reg yCordReg : UInt, clock with :
      reset => (reset, UInt<1>("h1")) @[MeshNode.scala 72:33]
    reg state : UInt<3>, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 74:22]
    reg isReady : UInt<1>, clock with :
      reset => (reset, UInt<1>("h1")) @[MeshNode.scala 75:24]
    reg nextHop : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 76:24]
    reg nextRoute : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 77:26]
    reg payload : UInt, clock with :
      reset => (reset, UInt<1>("h0")) @[MeshNode.scala 78:24]
    io.in[0].ready <= isReady @[MeshNode.scala 85:15]
    io.in[1].ready <= isReady @[MeshNode.scala 85:15]
    io.in[2].ready <= isReady @[MeshNode.scala 85:15]
    io.in[3].ready <= isReady @[MeshNode.scala 85:15]
    io.out[0].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[0].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[0].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[0].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[1].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[1].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[2].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[2].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].valid <= UInt<1>("h0") @[MeshNode.scala 89:15]
    io.out[3].bits.word.0 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].bits.word.1 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    io.out[3].bits.word.2 <= UInt<1>("h0") @[MeshNode.scala 90:34]
    node _T = asUInt(UInt<1>("h0")) @[MeshNode.scala 93:18]
    node _T_1 = asUInt(state) @[MeshNode.scala 93:18]
    node _T_2 = eq(_T, _T_1) @[MeshNode.scala 93:18]
    when _T_2 : @[MeshNode.scala 93:18]
      node _T_3 = and(io.requestPacket.ready, io.requestPacket.valid) @[Decoupled.scala 52:35]
      when _T_3 : @[MeshNode.scala 95:35]
        nextHop <= io.routeLookup.route[0] @[MeshNode.scala 98:17]
        wire _nextRoute_WIRE : UInt[2] @[MeshNode.scala 99:29]
        _nextRoute_WIRE[0] <= io.routeLookup.route[1] @[MeshNode.scala 99:29]
        _nextRoute_WIRE[1] <= io.routeLookup.route[2] @[MeshNode.scala 99:29]
        node _nextRoute_T = cat(_nextRoute_WIRE[1], _nextRoute_WIRE[0]) @[MeshNode.scala 99:42]
        nextRoute <= _nextRoute_T @[MeshNode.scala 99:19]
        payload <= io.requestPacket.bits.payload @[MeshNode.scala 100:17]
        isReady <= UInt<1>("h0") @[MeshNode.scala 101:17]
        state <= UInt<1>("h1") @[MeshNode.scala 102:15]
      else :
        node _T_4 = or(io.in[0].valid, io.in[1].valid) @[MeshNode.scala 103:56]
        node _T_5 = or(_T_4, io.in[2].valid) @[MeshNode.scala 103:56]
        node _T_6 = or(_T_5, io.in[3].valid) @[MeshNode.scala 103:56]
        when _T_6 : @[MeshNode.scala 103:63]
          node _index_T = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_1 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_2 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_3 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 106:55]
          node _index_T_4 = mux(_index_T_2, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 106:37]
          node _index_T_5 = mux(_index_T_1, UInt<1>("h1"), _index_T_4) @[MeshNode.scala 106:37]
          node index = mux(_index_T, UInt<1>("h0"), _index_T_5) @[MeshNode.scala 106:37]
          node _nextHop_T = bits(io.in[index].bits.word.1, 0, 0) @[MeshNode.scala 107:54]
          node _nextHop_T_1 = bits(io.in[index].bits.word.1, 1, 1) @[MeshNode.scala 107:54]
          node _nextHop_T_2 = bits(io.in[index].bits.word.1, 2, 2) @[MeshNode.scala 107:54]
          node _nextHop_T_3 = bits(io.in[index].bits.word.1, 3, 3) @[MeshNode.scala 107:54]
          node _nextHop_T_4 = bits(io.in[index].bits.word.1, 4, 4) @[MeshNode.scala 107:54]
          node _nextHop_T_5 = bits(io.in[index].bits.word.1, 5, 5) @[MeshNode.scala 107:54]
          node _nextHop_T_6 = bits(io.in[index].bits.word.1, 6, 6) @[MeshNode.scala 107:54]
          node _nextHop_T_7 = bits(io.in[index].bits.word.1, 7, 7) @[MeshNode.scala 107:54]
          node _nextHop_T_8 = bits(io.in[index].bits.word.1, 8, 8) @[MeshNode.scala 107:54]
          wire _nextHop_WIRE : UInt<1>[2] @[MeshNode.scala 107:27]
          _nextHop_WIRE[0] <= _nextHop_T @[MeshNode.scala 107:27]
          _nextHop_WIRE[1] <= _nextHop_T_1 @[MeshNode.scala 107:27]
          node _nextHop_T_9 = cat(_nextHop_WIRE[1], _nextHop_WIRE[0]) @[MeshNode.scala 107:93]
          nextHop <= _nextHop_T_9 @[MeshNode.scala 107:17]
          node _nextRoute_T_1 = bits(io.in[index].bits.word.1, 0, 0) @[MeshNode.scala 108:56]
          node _nextRoute_T_2 = bits(io.in[index].bits.word.1, 1, 1) @[MeshNode.scala 108:56]
          node _nextRoute_T_3 = bits(io.in[index].bits.word.1, 2, 2) @[MeshNode.scala 108:56]
          node _nextRoute_T_4 = bits(io.in[index].bits.word.1, 3, 3) @[MeshNode.scala 108:56]
          node _nextRoute_T_5 = bits(io.in[index].bits.word.1, 4, 4) @[MeshNode.scala 108:56]
          node _nextRoute_T_6 = bits(io.in[index].bits.word.1, 5, 5) @[MeshNode.scala 108:56]
          node _nextRoute_T_7 = bits(io.in[index].bits.word.1, 6, 6) @[MeshNode.scala 108:56]
          node _nextRoute_T_8 = bits(io.in[index].bits.word.1, 7, 7) @[MeshNode.scala 108:56]
          node _nextRoute_T_9 = bits(io.in[index].bits.word.1, 8, 8) @[MeshNode.scala 108:56]
          wire _nextRoute_WIRE_1 : UInt<1>[5] @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[0] <= _nextRoute_T_4 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[1] <= _nextRoute_T_5 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[2] <= _nextRoute_T_6 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[3] <= _nextRoute_T_7 @[MeshNode.scala 108:29]
          _nextRoute_WIRE_1[4] <= _nextRoute_T_8 @[MeshNode.scala 108:29]
          node nextRoute_lo = cat(_nextRoute_WIRE_1[1], _nextRoute_WIRE_1[0]) @[MeshNode.scala 108:110]
          node nextRoute_hi_hi = cat(_nextRoute_WIRE_1[4], _nextRoute_WIRE_1[3]) @[MeshNode.scala 108:110]
          node nextRoute_hi = cat(nextRoute_hi_hi, _nextRoute_WIRE_1[2]) @[MeshNode.scala 108:110]
          node _nextRoute_T_10 = cat(nextRoute_hi, nextRoute_lo) @[MeshNode.scala 108:110]
          nextRoute <= _nextRoute_T_10 @[MeshNode.scala 108:19]
          state <= UInt<3>("h5") @[MeshNode.scala 110:15]
    else :
      node _T_7 = asUInt(UInt<1>("h1")) @[MeshNode.scala 93:18]
      node _T_8 = asUInt(state) @[MeshNode.scala 93:18]
      node _T_9 = eq(_T_7, _T_8) @[MeshNode.scala 93:18]
      when _T_9 : @[MeshNode.scala 93:18]
        wire header : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 148:22]
        node _header_header_word_0_T = asUInt(UInt<1>("h0")) @[MeshNode.scala 149:25]
        header.word.0 <= _header_header_word_0_T @[MeshNode.scala 149:20]
        header.word.1 <= nextRoute @[MeshNode.scala 150:20]
        header.word.2 <= UInt<1>("h0") @[MeshNode.scala 151:20]
        node _T_10 = or(nextHop, UInt<2>("h0"))
        node _T_11 = bits(_T_10, 1, 0)
        io.out[_T_11].valid <= UInt<1>("h1") @[MeshNode.scala 115:29]
        node _T_12 = or(nextHop, UInt<2>("h0"))
        node _T_13 = bits(_T_12, 1, 0)
        io.out[_T_13].bits <= header @[MeshNode.scala 116:28]
        state <= UInt<2>("h2") @[MeshNode.scala 117:13]
      else :
        node _T_14 = asUInt(UInt<2>("h2")) @[MeshNode.scala 93:18]
        node _T_15 = asUInt(state) @[MeshNode.scala 93:18]
        node _T_16 = eq(_T_14, _T_15) @[MeshNode.scala 93:18]
        when _T_16 : @[MeshNode.scala 93:18]
          wire payloadPhit : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 156:23]
          node _payloadPhit_payload_word_0_T = asUInt(UInt<1>("h1")) @[MeshNode.scala 157:26]
          payloadPhit.word.0 <= _payloadPhit_payload_word_0_T @[MeshNode.scala 157:21]
          payloadPhit.word.1 <= UInt<1>("h0") @[MeshNode.scala 158:21]
          payloadPhit.word.2 <= payload @[MeshNode.scala 159:21]
          node _T_17 = or(nextHop, UInt<2>("h0"))
          node _T_18 = bits(_T_17, 1, 0)
          io.out[_T_18].valid <= UInt<1>("h1") @[MeshNode.scala 122:29]
          node _T_19 = or(nextHop, UInt<2>("h0"))
          node _T_20 = bits(_T_19, 1, 0)
          io.out[_T_20].bits <= payloadPhit @[MeshNode.scala 123:28]
          state <= UInt<2>("h3") @[MeshNode.scala 124:13]
        else :
          node _T_21 = asUInt(UInt<2>("h3")) @[MeshNode.scala 93:18]
          node _T_22 = asUInt(state) @[MeshNode.scala 93:18]
          node _T_23 = eq(_T_21, _T_22) @[MeshNode.scala 93:18]
          when _T_23 : @[MeshNode.scala 93:18]
            wire endingPhit : { word : { 2 : UInt<16>, 1 : UInt<9>, 0 : UInt<2>}} @[MeshNode.scala 164:19]
            node _endingPhit_end_word_0_T = asUInt(UInt<2>("h2")) @[MeshNode.scala 165:23]
            endingPhit.word.0 <= _endingPhit_end_word_0_T @[MeshNode.scala 165:17]
            endingPhit.word.1 <= UInt<1>("h0") @[MeshNode.scala 166:17]
            endingPhit.word.2 <= UInt<1>("h0") @[MeshNode.scala 167:17]
            node _T_24 = or(nextHop, UInt<2>("h0"))
            node _T_25 = bits(_T_24, 1, 0)
            io.out[_T_25].valid <= UInt<1>("h1") @[MeshNode.scala 129:29]
            node _T_26 = or(nextHop, UInt<2>("h0"))
            node _T_27 = bits(_T_26, 1, 0)
            io.out[_T_27].bits <= endingPhit @[MeshNode.scala 130:28]
            state <= UInt<1>("h0") @[MeshNode.scala 131:13]
            isReady <= UInt<1>("h1") @[MeshNode.scala 132:15]
          else :
            node _T_28 = asUInt(UInt<3>("h5")) @[MeshNode.scala 93:18]
            node _T_29 = asUInt(state) @[MeshNode.scala 93:18]
            node _T_30 = eq(_T_28, _T_29) @[MeshNode.scala 93:18]
            when _T_30 : @[MeshNode.scala 93:18]
              node _index_T_6 = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_7 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_8 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_9 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 136:53]
              node _index_T_10 = mux(_index_T_8, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 136:35]
              node _index_T_11 = mux(_index_T_7, UInt<1>("h1"), _index_T_10) @[MeshNode.scala 136:35]
              node index_1 = mux(_index_T_6, UInt<1>("h0"), _index_T_11) @[MeshNode.scala 136:35]
              payload <= io.in[index_1].bits.word.2 @[MeshNode.scala 137:15]
              state <= UInt<3>("h6") @[MeshNode.scala 138:13]
            else :
              node _T_31 = asUInt(UInt<3>("h6")) @[MeshNode.scala 93:18]
              node _T_32 = asUInt(state) @[MeshNode.scala 93:18]
              node _T_33 = eq(_T_31, _T_32) @[MeshNode.scala 93:18]
              when _T_33 : @[MeshNode.scala 93:18]
                node _index_T_12 = eq(io.in[0].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_13 = eq(io.in[1].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_14 = eq(io.in[2].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_15 = eq(io.in[3].valid, UInt<1>("h1")) @[MeshNode.scala 141:53]
                node _index_T_16 = mux(_index_T_14, UInt<2>("h2"), UInt<2>("h3")) @[MeshNode.scala 141:35]
                node _index_T_17 = mux(_index_T_13, UInt<1>("h1"), _index_T_16) @[MeshNode.scala 141:35]
                node index_2 = mux(_index_T_12, UInt<1>("h0"), _index_T_17) @[MeshNode.scala 141:35]
                node _state_T = asUInt(UInt<3>("h4")) @[MeshNode.scala 143:34]
                node _state_T_1 = eq(nextHop, _state_T) @[MeshNode.scala 143:28]
                node _state_T_2 = mux(_state_T_1, UInt<1>("h0"), UInt<1>("h1")) @[MeshNode.scala 143:19]
                state <= _state_T_2 @[MeshNode.scala 143:13]
    io.routeLookup.sourceNodeID <= UInt<2>("h3") @[MeshNode.scala 181:31]
    io.routeLookup.destNodeID[0] <= io.requestPacket.bits.destNodeID[0] @[MeshNode.scala 186:32]
    io.routeLookup.destNodeID[1] <= io.requestPacket.bits.destNodeID[1] @[MeshNode.scala 187:32]
    io.requestPacket.ready <= isReady @[MeshNode.scala 189:26]
    io.state <= state @[MeshNode.scala 190:12]

  module MeshNetwork :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip requestPacket : { flip ready : UInt<1>, valid : UInt<1>, bits : { destNodeID : UInt<1>[2], payload : UInt<16>}}[4], state : UInt<3>[4]}

    inst mesh_0_0 of MeshNode @[MeshNetwork.scala 62:66]
    mesh_0_0.clock <= clock
    mesh_0_0.reset <= reset
    inst mesh_0_1 of MeshNode_1 @[MeshNetwork.scala 62:66]
    mesh_0_1.clock <= clock
    mesh_0_1.reset <= reset
    inst mesh_1_0 of MeshNode_2 @[MeshNetwork.scala 62:66]
    mesh_1_0.clock <= clock
    mesh_1_0.reset <= reset
    inst mesh_1_1 of MeshNode_3 @[MeshNetwork.scala 62:66]
    mesh_1_1.clock <= clock
    mesh_1_1.reset <= reset
    node routingTable_result_0 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_1 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE[0] <= routingTable_result_0 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE[1] <= routingTable_result_1 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE[2] <= routingTable_result_2 @[MeshNetwork.scala 70:12]
    node _routingTable_T = asUInt(UInt<2>("h2")) @[MeshNetwork.scala 162:47]
    node routingTable_result_1_1 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_1 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_1 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_1[0] <= _routingTable_T @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_1[1] <= routingTable_result_1_1 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_1[2] <= routingTable_result_2_1 @[MeshNetwork.scala 70:12]
    node _routingTable_T_1 = asUInt(UInt<1>("h1")) @[MeshNetwork.scala 169:49]
    node routingTable_result_1_2 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_2 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_2 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_2[0] <= _routingTable_T_1 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_2[1] <= routingTable_result_1_2 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_2[2] <= routingTable_result_2_2 @[MeshNetwork.scala 70:12]
    node _routingTable_T_2 = asUInt(UInt<2>("h2")) @[MeshNetwork.scala 162:47]
    node _routingTable_T_3 = asUInt(UInt<1>("h1")) @[MeshNetwork.scala 169:49]
    node routingTable_result_2_3 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_3 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_3[0] <= _routingTable_T_2 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_3[1] <= _routingTable_T_3 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_3[2] <= routingTable_result_2_3 @[MeshNetwork.scala 70:12]
    node _routingTable_T_4 = asUInt(UInt<2>("h3")) @[MeshNetwork.scala 165:47]
    node routingTable_result_1_3 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_4 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_4 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_4[0] <= _routingTable_T_4 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_4[1] <= routingTable_result_1_3 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_4[2] <= routingTable_result_2_4 @[MeshNetwork.scala 70:12]
    node routingTable_result_0_1 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_1_4 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_5 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_5 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_5[0] <= routingTable_result_0_1 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_5[1] <= routingTable_result_1_4 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_5[2] <= routingTable_result_2_5 @[MeshNetwork.scala 70:12]
    node _routingTable_T_5 = asUInt(UInt<2>("h3")) @[MeshNetwork.scala 165:47]
    node _routingTable_T_6 = asUInt(UInt<1>("h1")) @[MeshNetwork.scala 169:49]
    node routingTable_result_2_6 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_6 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_6[0] <= _routingTable_T_5 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_6[1] <= _routingTable_T_6 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_6[2] <= routingTable_result_2_6 @[MeshNetwork.scala 70:12]
    node _routingTable_T_7 = asUInt(UInt<1>("h1")) @[MeshNetwork.scala 169:49]
    node routingTable_result_1_5 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_7 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_7 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_7[0] <= _routingTable_T_7 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_7[1] <= routingTable_result_1_5 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_7[2] <= routingTable_result_2_7 @[MeshNetwork.scala 70:12]
    node _routingTable_T_8 = asUInt(UInt<1>("h0")) @[MeshNetwork.scala 172:49]
    node routingTable_result_1_6 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_8 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_8 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_8[0] <= _routingTable_T_8 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_8[1] <= routingTable_result_1_6 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_8[2] <= routingTable_result_2_8 @[MeshNetwork.scala 70:12]
    node _routingTable_T_9 = asUInt(UInt<2>("h2")) @[MeshNetwork.scala 162:47]
    node _routingTable_T_10 = asUInt(UInt<1>("h0")) @[MeshNetwork.scala 172:49]
    node routingTable_result_2_9 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_9 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_9[0] <= _routingTable_T_9 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_9[1] <= _routingTable_T_10 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_9[2] <= routingTable_result_2_9 @[MeshNetwork.scala 70:12]
    node routingTable_result_0_2 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_1_7 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_10 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_10 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_10[0] <= routingTable_result_0_2 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_10[1] <= routingTable_result_1_7 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_10[2] <= routingTable_result_2_10 @[MeshNetwork.scala 70:12]
    node _routingTable_T_11 = asUInt(UInt<2>("h2")) @[MeshNetwork.scala 162:47]
    node routingTable_result_1_8 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_11 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_11 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_11[0] <= _routingTable_T_11 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_11[1] <= routingTable_result_1_8 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_11[2] <= routingTable_result_2_11 @[MeshNetwork.scala 70:12]
    node _routingTable_T_12 = asUInt(UInt<2>("h3")) @[MeshNetwork.scala 165:47]
    node _routingTable_T_13 = asUInt(UInt<1>("h0")) @[MeshNetwork.scala 172:49]
    node routingTable_result_2_12 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_12 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_12[0] <= _routingTable_T_12 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_12[1] <= _routingTable_T_13 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_12[2] <= routingTable_result_2_12 @[MeshNetwork.scala 70:12]
    node _routingTable_T_14 = asUInt(UInt<1>("h0")) @[MeshNetwork.scala 172:49]
    node routingTable_result_1_9 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_13 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_13 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_13[0] <= _routingTable_T_14 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_13[1] <= routingTable_result_1_9 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_13[2] <= routingTable_result_2_13 @[MeshNetwork.scala 70:12]
    node _routingTable_T_15 = asUInt(UInt<2>("h3")) @[MeshNetwork.scala 165:47]
    node routingTable_result_1_10 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_14 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_14 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_14[0] <= _routingTable_T_15 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_14[1] <= routingTable_result_1_10 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_14[2] <= routingTable_result_2_14 @[MeshNetwork.scala 70:12]
    node routingTable_result_0_3 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_1_11 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    node routingTable_result_2_15 = asUInt(UInt<3>("h4")) @[MeshNetwork.scala 156:68]
    wire _routingTable_WIRE_15 : UInt<3>[3] @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_15[0] <= routingTable_result_0_3 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_15[1] <= routingTable_result_1_11 @[MeshNetwork.scala 70:12]
    _routingTable_WIRE_15[2] <= routingTable_result_2_15 @[MeshNetwork.scala 70:12]
    wire routingTable : UInt<3>[3][2][2][4] @[MeshNetwork.scala 65:71]
    routingTable[0][0][0] <= _routingTable_WIRE @[MeshNetwork.scala 65:71]
    routingTable[0][0][1] <= _routingTable_WIRE_1 @[MeshNetwork.scala 65:71]
    routingTable[0][1][0] <= _routingTable_WIRE_2 @[MeshNetwork.scala 65:71]
    routingTable[0][1][1] <= _routingTable_WIRE_3 @[MeshNetwork.scala 65:71]
    routingTable[1][0][0] <= _routingTable_WIRE_4 @[MeshNetwork.scala 65:71]
    routingTable[1][0][1] <= _routingTable_WIRE_5 @[MeshNetwork.scala 65:71]
    routingTable[1][1][0] <= _routingTable_WIRE_6 @[MeshNetwork.scala 65:71]
    routingTable[1][1][1] <= _routingTable_WIRE_7 @[MeshNetwork.scala 65:71]
    routingTable[2][0][0] <= _routingTable_WIRE_8 @[MeshNetwork.scala 65:71]
    routingTable[2][0][1] <= _routingTable_WIRE_9 @[MeshNetwork.scala 65:71]
    routingTable[2][1][0] <= _routingTable_WIRE_10 @[MeshNetwork.scala 65:71]
    routingTable[2][1][1] <= _routingTable_WIRE_11 @[MeshNetwork.scala 65:71]
    routingTable[3][0][0] <= _routingTable_WIRE_12 @[MeshNetwork.scala 65:71]
    routingTable[3][0][1] <= _routingTable_WIRE_13 @[MeshNetwork.scala 65:71]
    routingTable[3][1][0] <= _routingTable_WIRE_14 @[MeshNetwork.scala 65:71]
    routingTable[3][1][1] <= _routingTable_WIRE_15 @[MeshNetwork.scala 65:71]
    mesh_0_0.io.requestPacket <= io.requestPacket[0] @[MeshNetwork.scala 74:27]
    io.state[0] <= mesh_0_0.io.state @[MeshNetwork.scala 75:7]
    mesh_0_0.io.routeLookup.route[0] <= routingTable[mesh_0_0.io.routeLookup.sourceNodeID][mesh_0_0.io.routeLookup.destNodeID[1]][mesh_0_0.io.routeLookup.destNodeID[0]][0] @[MeshNetwork.scala 77:31]
    mesh_0_0.io.routeLookup.route[1] <= routingTable[mesh_0_0.io.routeLookup.sourceNodeID][mesh_0_0.io.routeLookup.destNodeID[1]][mesh_0_0.io.routeLookup.destNodeID[0]][1] @[MeshNetwork.scala 77:31]
    mesh_0_0.io.routeLookup.route[2] <= routingTable[mesh_0_0.io.routeLookup.sourceNodeID][mesh_0_0.io.routeLookup.destNodeID[1]][mesh_0_0.io.routeLookup.destNodeID[0]][2] @[MeshNetwork.scala 77:31]
    mesh_0_1.io.requestPacket <= io.requestPacket[1] @[MeshNetwork.scala 74:27]
    io.state[1] <= mesh_0_1.io.state @[MeshNetwork.scala 75:7]
    mesh_0_1.io.routeLookup.route[0] <= routingTable[mesh_0_1.io.routeLookup.sourceNodeID][mesh_0_1.io.routeLookup.destNodeID[1]][mesh_0_1.io.routeLookup.destNodeID[0]][0] @[MeshNetwork.scala 77:31]
    mesh_0_1.io.routeLookup.route[1] <= routingTable[mesh_0_1.io.routeLookup.sourceNodeID][mesh_0_1.io.routeLookup.destNodeID[1]][mesh_0_1.io.routeLookup.destNodeID[0]][1] @[MeshNetwork.scala 77:31]
    mesh_0_1.io.routeLookup.route[2] <= routingTable[mesh_0_1.io.routeLookup.sourceNodeID][mesh_0_1.io.routeLookup.destNodeID[1]][mesh_0_1.io.routeLookup.destNodeID[0]][2] @[MeshNetwork.scala 77:31]
    mesh_1_0.io.requestPacket <= io.requestPacket[2] @[MeshNetwork.scala 74:27]
    io.state[2] <= mesh_1_0.io.state @[MeshNetwork.scala 75:7]
    mesh_1_0.io.routeLookup.route[0] <= routingTable[mesh_1_0.io.routeLookup.sourceNodeID][mesh_1_0.io.routeLookup.destNodeID[1]][mesh_1_0.io.routeLookup.destNodeID[0]][0] @[MeshNetwork.scala 77:31]
    mesh_1_0.io.routeLookup.route[1] <= routingTable[mesh_1_0.io.routeLookup.sourceNodeID][mesh_1_0.io.routeLookup.destNodeID[1]][mesh_1_0.io.routeLookup.destNodeID[0]][1] @[MeshNetwork.scala 77:31]
    mesh_1_0.io.routeLookup.route[2] <= routingTable[mesh_1_0.io.routeLookup.sourceNodeID][mesh_1_0.io.routeLookup.destNodeID[1]][mesh_1_0.io.routeLookup.destNodeID[0]][2] @[MeshNetwork.scala 77:31]
    mesh_1_1.io.requestPacket <= io.requestPacket[3] @[MeshNetwork.scala 74:27]
    io.state[3] <= mesh_1_1.io.state @[MeshNetwork.scala 75:7]
    mesh_1_1.io.routeLookup.route[0] <= routingTable[mesh_1_1.io.routeLookup.sourceNodeID][mesh_1_1.io.routeLookup.destNodeID[1]][mesh_1_1.io.routeLookup.destNodeID[0]][0] @[MeshNetwork.scala 77:31]
    mesh_1_1.io.routeLookup.route[1] <= routingTable[mesh_1_1.io.routeLookup.sourceNodeID][mesh_1_1.io.routeLookup.destNodeID[1]][mesh_1_1.io.routeLookup.destNodeID[0]][1] @[MeshNetwork.scala 77:31]
    mesh_1_1.io.routeLookup.route[2] <= routingTable[mesh_1_1.io.routeLookup.sourceNodeID][mesh_1_1.io.routeLookup.destNodeID[1]][mesh_1_1.io.routeLookup.destNodeID[0]][2] @[MeshNetwork.scala 77:31]
    mesh_0_1.io.in[3] <= mesh_0_0.io.out[2] @[MeshNetwork.scala 86:35]
    mesh_0_0.io.in[2] <= mesh_0_1.io.out[3] @[MeshNetwork.scala 87:37]
    mesh_0_0.io.out[3].ready <= UInt<1>("h0") @[MeshNetwork.scala 89:41]
    mesh_0_0.io.in[3].bits.word.0 <= UInt<1>("h0") @[MeshNetwork.scala 90:60]
    mesh_0_0.io.in[3].bits.word.1 <= UInt<1>("h0") @[MeshNetwork.scala 90:60]
    mesh_0_0.io.in[3].bits.word.2 <= UInt<1>("h0") @[MeshNetwork.scala 90:60]
    mesh_0_0.io.in[3].valid <= UInt<1>("h0") @[MeshNetwork.scala 91:40]
    mesh_1_0.io.in[0] <= mesh_0_0.io.out[1] @[MeshNetwork.scala 115:35]
    mesh_0_0.io.in[1] <= mesh_1_0.io.out[0] @[MeshNetwork.scala 116:43]
    mesh_0_0.io.out[0].ready <= UInt<1>("h0") @[MeshNetwork.scala 118:41]
    mesh_0_0.io.in[0].bits.word.0 <= UInt<1>("h0") @[MeshNetwork.scala 119:60]
    mesh_0_0.io.in[0].bits.word.1 <= UInt<1>("h0") @[MeshNetwork.scala 119:60]
    mesh_0_0.io.in[0].bits.word.2 <= UInt<1>("h0") @[MeshNetwork.scala 119:60]
    mesh_0_0.io.in[0].valid <= UInt<1>("h0") @[MeshNetwork.scala 120:40]
    mesh_0_0.io.in[2] <= mesh_0_1.io.out[3] @[MeshNetwork.scala 96:35]
    mesh_0_1.io.in[3] <= mesh_0_0.io.out[2] @[MeshNetwork.scala 97:37]
    mesh_0_1.io.out[2].ready <= UInt<1>("h0") @[MeshNetwork.scala 99:41]
    mesh_0_1.io.in[2].bits.word.0 <= UInt<1>("h0") @[MeshNetwork.scala 100:60]
    mesh_0_1.io.in[2].bits.word.1 <= UInt<1>("h0") @[MeshNetwork.scala 100:60]
    mesh_0_1.io.in[2].bits.word.2 <= UInt<1>("h0") @[MeshNetwork.scala 100:60]
    mesh_0_1.io.in[2].valid <= UInt<1>("h0") @[MeshNetwork.scala 101:40]
    mesh_1_1.io.in[0] <= mesh_0_1.io.out[1] @[MeshNetwork.scala 115:35]
    mesh_0_1.io.in[1] <= mesh_1_1.io.out[0] @[MeshNetwork.scala 116:43]
    mesh_0_1.io.out[0].ready <= UInt<1>("h0") @[MeshNetwork.scala 118:41]
    mesh_0_1.io.in[0].bits.word.0 <= UInt<1>("h0") @[MeshNetwork.scala 119:60]
    mesh_0_1.io.in[0].bits.word.1 <= UInt<1>("h0") @[MeshNetwork.scala 119:60]
    mesh_0_1.io.in[0].bits.word.2 <= UInt<1>("h0") @[MeshNetwork.scala 119:60]
    mesh_0_1.io.in[0].valid <= UInt<1>("h0") @[MeshNetwork.scala 120:40]
    mesh_1_1.io.in[3] <= mesh_1_0.io.out[2] @[MeshNetwork.scala 86:35]
    mesh_1_0.io.in[2] <= mesh_1_1.io.out[3] @[MeshNetwork.scala 87:37]
    mesh_1_0.io.out[3].ready <= UInt<1>("h0") @[MeshNetwork.scala 89:41]
    mesh_1_0.io.in[3].bits.word.0 <= UInt<1>("h0") @[MeshNetwork.scala 90:60]
    mesh_1_0.io.in[3].bits.word.1 <= UInt<1>("h0") @[MeshNetwork.scala 90:60]
    mesh_1_0.io.in[3].bits.word.2 <= UInt<1>("h0") @[MeshNetwork.scala 90:60]
    mesh_1_0.io.in[3].valid <= UInt<1>("h0") @[MeshNetwork.scala 91:40]
    mesh_0_0.io.in[1] <= mesh_1_0.io.out[0] @[MeshNetwork.scala 125:35]
    mesh_1_0.io.in[0] <= mesh_0_0.io.out[1] @[MeshNetwork.scala 126:45]
    mesh_1_0.io.out[1].ready <= UInt<1>("h0") @[MeshNetwork.scala 128:41]
    mesh_1_0.io.in[1].bits.word.0 <= UInt<1>("h0") @[MeshNetwork.scala 129:60]
    mesh_1_0.io.in[1].bits.word.1 <= UInt<1>("h0") @[MeshNetwork.scala 129:60]
    mesh_1_0.io.in[1].bits.word.2 <= UInt<1>("h0") @[MeshNetwork.scala 129:60]
    mesh_1_0.io.in[1].valid <= UInt<1>("h0") @[MeshNetwork.scala 130:40]
    mesh_1_0.io.in[2] <= mesh_1_1.io.out[3] @[MeshNetwork.scala 96:35]
    mesh_1_1.io.in[3] <= mesh_1_0.io.out[2] @[MeshNetwork.scala 97:37]
    mesh_1_1.io.out[2].ready <= UInt<1>("h0") @[MeshNetwork.scala 99:41]
    mesh_1_1.io.in[2].bits.word.0 <= UInt<1>("h0") @[MeshNetwork.scala 100:60]
    mesh_1_1.io.in[2].bits.word.1 <= UInt<1>("h0") @[MeshNetwork.scala 100:60]
    mesh_1_1.io.in[2].bits.word.2 <= UInt<1>("h0") @[MeshNetwork.scala 100:60]
    mesh_1_1.io.in[2].valid <= UInt<1>("h0") @[MeshNetwork.scala 101:40]
    mesh_0_1.io.in[1] <= mesh_1_1.io.out[0] @[MeshNetwork.scala 125:35]
    mesh_1_1.io.in[0] <= mesh_0_1.io.out[1] @[MeshNetwork.scala 126:45]
    mesh_1_1.io.out[1].ready <= UInt<1>("h0") @[MeshNetwork.scala 128:41]
    mesh_1_1.io.in[1].bits.word.0 <= UInt<1>("h0") @[MeshNetwork.scala 129:60]
    mesh_1_1.io.in[1].bits.word.1 <= UInt<1>("h0") @[MeshNetwork.scala 129:60]
    mesh_1_1.io.in[1].bits.word.2 <= UInt<1>("h0") @[MeshNetwork.scala 129:60]
    mesh_1_1.io.in[1].valid <= UInt<1>("h0") @[MeshNetwork.scala 130:40]

